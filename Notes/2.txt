Lecture- 295
https://www.udemy.com/course/spring-hibernate-tutorial/learn/lecture/23249362#notes

FAQ: Can you show example of Service calling Multiple DAOs?
Question

Can you show an example of Service calling Multiple DAOs? as I don't really understand or fully grasp the idea...



Answer

Multiple Data Sources in Spring

This project shows how to configure multiple datasources in Spring.

In this project, we connect to two different databases: web_customer_tracker and employee_directory

The application uses the following architecture

                                                /---- EmployeeDAO
    DemoController -> MultiDataSourceService ---
                                                \---- CustomerDAO


The complete source code for the project is available for download.

File: customer-tracker-with-multiple-datasources.zip



1. SQL Scripts

The SQL scripts are located in the directory:

sql-scripts

- customer.sql: creates the database schema "web_customer_tracker", also adds sample data

- employee.sql: creates the database schema "employee_directory", also adds sample data

You will need to run these scripts accordingly.



2. Data source configuration

The project the data source configurations in the config file: spring-mvc-crud-demo-servlet.xml

This file defines two datasources. One datasource for customerDataSource and another for employeeDataSource.

For each datasource defined, you need to add

- session factory

- transaction manager

- tx:annotation driven



3. Java DAO code

The project includes DAOs for Customer and Employee. Make note of the @Autowired for the respective session factory.
Also make note of the use of @Transactional with the name the of appropriate bean.



4. Java Service code

The service makes use of the customer and employee DAOs



5. Controller code

The controller used the service to retrieve the data. The data is placed in the model.



6. View page

File: display-results.jsp

This JSP page displays the results. It has an HTML table for Employee data and another HTML table for Customer data.



Once you run the application, then you will see following output ... from both datasources.

Img -> https://img-b.udemycdn.com/redactor/raw/article_lecture/2020-11-11_12-53-23-83eaf4b99925d4563c919771cedb2674.png